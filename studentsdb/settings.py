"""
Django settings for studentsdb project.

Generated by 'django-admin startproject' using Django 1.10.2.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os
import colorlog
from django.conf import global_settings

from env_settings import GOOGLE_OAUTH2_KEY, GOOGLE_OAUTH2_SECRET, TWITTER_KEY, TWITTER_SECRET
from env_settings import SECRET_KEY, DEBUG, TEMPLATE_DEBUG, ALLOWED_HOSTS
from env_settings import DATABASES, ADMIN_EMAIL, EMAIL_HOST, EMAIL_PORT
from env_settings import EMAIL_HOST_USER, EMAIL_HOST_PASSWORD
from env_settings import EMAIL_USE_TLS, EMAIL_USE_SSL, FACEBOOK_KEY, FACEBOOK_SECRET

from env_settings import STATIC_URL, MEDIA_URL, MEDIA_ROOT
from env_settings import ADMINS, MANAGERS

try:
    from env_settings import STATIC_ROOT
except ImportError:
    pass

try:
    from env_settings import EMAIL_BACKEND, EMAIL_FILE_PATH
except ImportError:
    pass

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

CRISPY_TEMPLATE_PACK = 'bootstrap3'

# Application definition

INSTALLED_APPS = [
    'modeltranslation',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'page_stats',
    'crispy_forms',
    'registration',
    'social_django',
    'django_coverage',
    'students',
    'stud_auth',
]

MIDDLEWARE = [
    'page_stats.middleware.RequestDatabaseTimeMiddleware',
    'page_stats.middleware.RequestTimeMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'students.views.user.TimezoneMiddleware',
]

ROOT_URLCONF = 'studentsdb.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'stud_auth', 'templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'social_django.context_processors.backends',
                'social_django.context_processors.login_redirect',
                'studentsdb.context_processors.students_proc',
                'students.context_processors.groups_processor'
            ],
            'libraries': {
                'pagenav': 'students.templatetags.pagenav',
                'select_menu': 'students.templatetags.select_menu',
            },
        },
    },
]

AUTHENTICATION_BACKENDS = (
    'social_core.backends.facebook.FacebookOAuth2',
    'social_core.backends.google.GoogleOAuth2',
    'social_core.backends.twitter.TwitterOAuth',
    'django.contrib.auth.backends.ModelBackend',
)

SOCIAL_AUTH_FACEBOOK_KEY = FACEBOOK_KEY
SOCIAL_AUTH_FACEBOOK_SECRET = FACEBOOK_SECRET
SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = GOOGLE_OAUTH2_KEY
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = GOOGLE_OAUTH2_SECRET
SOCIAL_AUTH_TWITTER_KEY = TWITTER_KEY
SOCIAL_AUTH_TWITTER_SECRET = TWITTER_SECRET

SOCIAL_AUTH_LOGIN_REDIRECT_URL = 'user-time'
SOCIAL_AUTH_USERNAME_IS_FULL_EMAIL = True

SOCIAL_AUTH_PIPELINE = (
    'social_core.pipeline.social_auth.social_details',
    'social_core.pipeline.social_auth.social_uid',
    'social_core.pipeline.social_auth.social_user',
    'social_core.pipeline.user.get_username',
    'stud_auth.views.get_user_name',
    'social_core.pipeline.user.create_user',
    'social_core.pipeline.social_auth.associate_user',
    'social_core.pipeline.social_auth.load_extra_data',
    'social_core.pipeline.user.user_details',
    'social_core.pipeline.social_auth.associate_by_email',
)

LOGIN_URL = 'users:auth_login'
LOGOUT_URL = 'users:auth_logout'

REGISTRATION_OPEN = True

ACCOUNT_ACTIVATION_DAYS = 1

LOG_FILE = os.path.join(BASE_DIR, 'studentsdb.log')

LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': {
        'verbose': {
            '()': 'colorlog.ColoredFormatter',
            'format': '%(log_color)s%(asctime)s %(levelname)s %(module)s: %(message)s',
            'log_colors': {
                'DEBUG': 'bold_black',
                'INFO': 'white',
                'WARNING': 'yellow',
                'ERROR': 'red',
                'CRITICAL': 'bold_red',
            },
        },
        'simple': {
            '()': 'colorlog.ColoredFormatter',
            'format': '%(asctime)s %(log_color)s%(levelname)s %(message)s',
            'log_colors': {
                'DEBUG': 'bold_black',
                'INFO': 'white',
                'WARNING': 'yellow',
                'ERROR': 'red',
                'CRITICAL': 'bold_red',
            },
        },
    },
    'handlers': {
        'null': {
            'level': 'DEBUG',
            'class': 'logging.NullHandler',
        },
        'console': {
            'level': 'INFO',
            'class': 'logging.StreamHandler',
            'formatter': 'simple'
        },
        'file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'formatter': 'verbose',
            'filename': LOG_FILE
        },
        'mail_admins': {
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler'
        }
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'propagate': True,
            'level': 'INFO',
        },
        'django.request': {
            'handlers': ['console', 'mail_admins'],
            'level': 'ERROR',
            'propagate': False,
        },
        'students.signals': {
            'handlers': ['console', 'file'],
            'level': 'INFO',
        },
        'students.views.contact_admin': {
            'handlers': ['console', 'file'],
            'level': 'ERROR',
        }
    }
}

WSGI_APPLICATION = 'studentsdb.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

# from sensitive_data import DATABASES

# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

USE_I18N = True

LANGUAGE_CODE = 'uk'

gettext = lambda s: s

LANGUAGES = (
    ('en', gettext('English')),
    ('uk', gettext('Ukrainian')),
    ('ru', gettext('Russian')),
)

MODELTRANSLATION_LANGUAGES = ('uk', 'en', 'ru')

# MODELTRANSLATION_DEFAULT_LANGUAGE = 'uk'

# MODELTRANSLATION_AUTO_POPULATE = True

USE_TZ = True

TIME_ZONE = 'UTC'

USE_L10N = True

DATE_FORMAT = 'Y E d'

COVERAGE_REPORT_HTML_OUTPUT_DIR = os.path.join(BASE_DIR, '..', 'coverage')

#DATABASES = {
##    'default': {
##        'ENGINE': 'django.db.backends.sqlite3',
##        'NAME': os.path.join(BASE_DIR, '..', 'db.sqlite3'),
##    }
     #'default': {
         #'ENGINE': 'django.db.backends.mysql',
##         'ENGINE': 'django.db.backends.postgresql',
##         'NAME': 'students_db',
##         'HOST': 'localhost',
##         'USER': 'students_db_user',
##         'PASSWORD': 'password',
         #'OPTIONS': {
             #'read_default_file': os.path.join(BASE_DIR, '..', 'db.cnf'),
         #},
     #}
#}

